{"version":3,"file":"static/js/669.809b8fb8.chunk.js","mappings":"iOAKMA,EAAU,iCAED,SAASC,IACtB,OAAoDC,EAAAA,EAAAA,UAAS,IAAG,eAAzDC,EAAkB,KAAEC,EAAqB,KAChD,GAAkCF,EAAAA,EAAAA,WAAS,GAAK,eAAzCG,EAAS,KAAEC,EAAY,KAC9B,GAA8BJ,EAAAA,EAAAA,UAAS,GAAE,eAAlCK,EAAO,KAAEC,EAAU,KAC1B,GACEC,EAAAA,EAAAA,YAAWC,EAAAA,GADLC,EAAW,EAAXA,YAAaC,EAAa,EAAbA,cAAeC,EAAe,EAAfA,iBAGpCC,EAAAA,EAAAA,YAAU,WACkB,aAazB,OAbyB,0BAA1B,oHAE2BC,MAAMf,GAAS,KAAD,EAAvB,IAARgB,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,kBAAD,OAAmBF,EAASG,SAAU,KAAD,kBAEjCH,EAASI,OAAO,KAAD,EAA9BC,EAAM,OACZT,EAAcS,EAAOC,MACrBlB,EAAsBiB,EAAOC,MAC7BhB,GAAa,GAAO,kDAEpBiB,QAAQC,MAAM,EAAD,IAAQ,2DAExB,uBAdc,WACW,wBAc1BC,EACF,GAAG,CAACb,EAAeR,EAAuBE,IAG1C,IAAMoB,EACJf,EAAYgB,OAAS,EAAId,EAAkBV,EAW7C,OACE,2BACE,oBAASyB,UAAU,qBAAoB,UACrC,iBAAKA,UAAU,YAAW,WACxB,iBAAKA,UAAU,yBAAwB,WACrC,gBAAKA,UAAU,YAAW,UACxB,eAAIA,UAAU,oBAAmB,UAC/B,4BAAQ,uBAGZ,gBAAKA,UAAU,WAAU,UACvB,gBAAKA,UAAU,kCAAiC,UAC9C,oBAAQA,UAAU,mBAAmBC,QAhB5B,WACrBrB,EAAWD,EAAU,EACvB,EAc2E,WAC3D,4BAAQ,SAAa,KAAC,SAAC,MAAM,CAACuB,MAAO,CAAEC,SAAU,mBAKxDC,MAAMC,KAAK,CAAEN,OAAQpB,IAAW,SAAC2B,EAAGC,GACnC,IAAMC,EAAwB,EAARD,EAChBE,EAAcD,EAAgB,EACpC,OACE,gBACER,UAAU,uDAAsD,SAI/DvB,GACC,eAAIuB,UAAU,wCAAuC,SAAC,eAItDF,EACGY,MAAMF,EAAeC,GACrBE,KAAI,SAACjB,GAAI,OAAK,SAAC,IAAS,CAAmBA,KAAMA,GAAnBA,EAAKkB,OAAsB,KAVzDL,EAcX,UAKV,C","sources":["Components/Animes/LoadMore.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { AnimeContext } from \"../../App\";\r\nimport AnimeCard from \"./AnimeCard\";\r\n\r\nconst API_URL = \"https://api.jikan.moe/v4/anime\";\r\n\r\nexport default function LoadMore() {\r\n  const [filterBasedOnGenre, setFilterBasedOnGenre] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [numRows, setNumRows] = useState(1); // state variable to track number of rows\r\n  const { searchInput, setEveryAnime, filteredResults } =\r\n    useContext(AnimeContext);\r\n\r\n  useEffect(() => {\r\n    async function fetchAnimes() {\r\n      try {\r\n        const response = await fetch(API_URL);\r\n        if (!response.ok) {\r\n          throw new Error(`Error! status: ${response.status}`);\r\n        }\r\n        const result = await response.json();\r\n        setEveryAnime(result.data);\r\n        setFilterBasedOnGenre(result.data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchAnimes();\r\n  }, [setEveryAnime, setFilterBasedOnGenre, setIsLoading]);\r\n\r\n  // Get the list of animes based on searchInput or filterBasedOnGenre\r\n  const animeList =\r\n    searchInput.length > 1 ? filteredResults : filterBasedOnGenre;\r\n\r\n  // Calculate starting and ending index of the new row\r\n  const startIndex = (numRows - 1) * 4;\r\n  const endIndex = startIndex + 4;\r\n\r\n  // Handle load more button click\r\n  const handleLoadMore = () => {\r\n    setNumRows(numRows + 1); // Increment number of rows on button click\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"latest-animes mt-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-md-10\">\r\n              <h2 className=\"text-primary fs-3\">\r\n                <strong>Latest Animes</strong>\r\n              </h2>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <div className=\"d-flex justify-content-end my-2\">\r\n                <button className=\"btn text-primary\" onClick={handleLoadMore}>\r\n                  <strong>More</strong> <FaPlus style={{ fontSize: \"8px\" }} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {Array.from({ length: numRows }, (_, index) => {\r\n            const rowStartIndex = index * 4;\r\n            const rowEndIndex = rowStartIndex + 4;\r\n            return (\r\n              <div\r\n                className=\"row d-flex justify-content-center align-items-center\"\r\n                key={index}\r\n              >\r\n                {/* Render the anime cards within the new row */}\r\n                {isLoading ? (\r\n                  <h2 className=\"text-success fw-bold text-center my-5\">\r\n                    Loading...\r\n                  </h2>\r\n                ) : (\r\n                  animeList\r\n                    .slice(rowStartIndex, rowEndIndex)\r\n                    .map((data) => <AnimeCard key={data.mal_id} data={data} />)\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n"],"names":["API_URL","LoadMore","useState","filterBasedOnGenre","setFilterBasedOnGenre","isLoading","setIsLoading","numRows","setNumRows","useContext","AnimeContext","searchInput","setEveryAnime","filteredResults","useEffect","fetch","response","ok","Error","status","json","result","data","console","error","fetchAnimes","animeList","length","className","onClick","style","fontSize","Array","from","_","index","rowStartIndex","rowEndIndex","slice","map","mal_id"],"sourceRoot":""}